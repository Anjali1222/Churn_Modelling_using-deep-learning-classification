{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMY9pA+aV+VTehxjrdzUnqY"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":73,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9nEQ3yPQjjj1","executionInfo":{"status":"ok","timestamp":1681807665502,"user_tz":-330,"elapsed":4943,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}},"outputId":"86d416b4-63e5-459f-b338-fd54753bfa5a"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: tensorflow in /usr/local/lib/python3.9/dist-packages (2.12.0)\n","Requirement already satisfied: google-pasta>=0.1.1 in /usr/local/lib/python3.9/dist-packages (from tensorflow) (0.2.0)\n","Requirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.9/dist-packages (from tensorflow) (3.3.0)\n","Requirement already satisfied: six>=1.12.0 in /usr/local/lib/python3.9/dist-packages (from tensorflow) (1.16.0)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.9/dist-packages (from tensorflow) (23.0)\n","Requirement already satisfied: protobuf!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<5.0.0dev,>=3.20.3 in /usr/local/lib/python3.9/dist-packages (from tensorflow) (3.20.3)\n","Requirement already satisfied: wrapt<1.15,>=1.11.0 in /usr/local/lib/python3.9/dist-packages (from tensorflow) (1.14.1)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.9/dist-packages (from tensorflow) (67.6.1)\n","Requirement already satisfied: jax>=0.3.15 in /usr/local/lib/python3.9/dist-packages (from tensorflow) (0.4.8)\n","Requirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.9/dist-packages (from tensorflow) (2.2.0)\n","Requirement already satisfied: tensorflow-estimator<2.13,>=2.12.0 in /usr/local/lib/python3.9/dist-packages (from tensorflow) (2.12.0)\n","Requirement already satisfied: keras<2.13,>=2.12.0 in /usr/local/lib/python3.9/dist-packages (from tensorflow) (2.12.0)\n","Requirement already satisfied: astunparse>=1.6.0 in /usr/local/lib/python3.9/dist-packages (from tensorflow) (1.6.3)\n","Requirement already satisfied: libclang>=13.0.0 in /usr/local/lib/python3.9/dist-packages (from tensorflow) (16.0.0)\n","Requirement already satisfied: flatbuffers>=2.0 in /usr/local/lib/python3.9/dist-packages (from tensorflow) (23.3.3)\n","Requirement already satisfied: grpcio<2.0,>=1.24.3 in /usr/local/lib/python3.9/dist-packages (from tensorflow) (1.53.0)\n","Requirement already satisfied: tensorboard<2.13,>=2.12 in /usr/local/lib/python3.9/dist-packages (from tensorflow) (2.12.1)\n","Requirement already satisfied: absl-py>=1.0.0 in /usr/local/lib/python3.9/dist-packages (from tensorflow) (1.4.0)\n","Requirement already satisfied: numpy<1.24,>=1.22 in /usr/local/lib/python3.9/dist-packages (from tensorflow) (1.22.4)\n","Requirement already satisfied: h5py>=2.9.0 in /usr/local/lib/python3.9/dist-packages (from tensorflow) (3.8.0)\n","Requirement already satisfied: typing-extensions>=3.6.6 in /usr/local/lib/python3.9/dist-packages (from tensorflow) (4.5.0)\n","Requirement already satisfied: tensorflow-io-gcs-filesystem>=0.23.1 in /usr/local/lib/python3.9/dist-packages (from tensorflow) (0.32.0)\n","Requirement already satisfied: gast<=0.4.0,>=0.2.1 in /usr/local/lib/python3.9/dist-packages (from tensorflow) (0.4.0)\n","Requirement already satisfied: wheel<1.0,>=0.23.0 in /usr/local/lib/python3.9/dist-packages (from astunparse>=1.6.0->tensorflow) (0.40.0)\n","Requirement already satisfied: ml-dtypes>=0.0.3 in /usr/local/lib/python3.9/dist-packages (from jax>=0.3.15->tensorflow) (0.0.4)\n","Requirement already satisfied: scipy>=1.7 in /usr/local/lib/python3.9/dist-packages (from jax>=0.3.15->tensorflow) (1.10.1)\n","Requirement already satisfied: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.9/dist-packages (from tensorboard<2.13,>=2.12->tensorflow) (1.8.1)\n","Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.9/dist-packages (from tensorboard<2.13,>=2.12->tensorflow) (2.27.1)\n","Requirement already satisfied: google-auth-oauthlib<1.1,>=0.5 in /usr/local/lib/python3.9/dist-packages (from tensorboard<2.13,>=2.12->tensorflow) (1.0.0)\n","Requirement already satisfied: tensorboard-data-server<0.8.0,>=0.7.0 in /usr/local/lib/python3.9/dist-packages (from tensorboard<2.13,>=2.12->tensorflow) (0.7.0)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.9/dist-packages (from tensorboard<2.13,>=2.12->tensorflow) (3.4.3)\n","Requirement already satisfied: google-auth<3,>=1.6.3 in /usr/local/lib/python3.9/dist-packages (from tensorboard<2.13,>=2.12->tensorflow) (2.17.2)\n","Requirement already satisfied: werkzeug>=1.0.1 in /usr/local/lib/python3.9/dist-packages (from tensorboard<2.13,>=2.12->tensorflow) (2.2.3)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.9/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.13,>=2.12->tensorflow) (0.2.8)\n","Requirement already satisfied: cachetools<6.0,>=2.0.0 in /usr/local/lib/python3.9/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.13,>=2.12->tensorflow) (5.3.0)\n","Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.9/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.13,>=2.12->tensorflow) (4.9)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.9/dist-packages (from google-auth-oauthlib<1.1,>=0.5->tensorboard<2.13,>=2.12->tensorflow) (1.3.1)\n","Requirement already satisfied: importlib-metadata>=4.4 in /usr/local/lib/python3.9/dist-packages (from markdown>=2.6.8->tensorboard<2.13,>=2.12->tensorflow) (6.3.0)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.9/dist-packages (from requests<3,>=2.21.0->tensorboard<2.13,>=2.12->tensorflow) (3.4)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.9/dist-packages (from requests<3,>=2.21.0->tensorboard<2.13,>=2.12->tensorflow) (1.26.15)\n","Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.9/dist-packages (from requests<3,>=2.21.0->tensorboard<2.13,>=2.12->tensorflow) (2.0.12)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.9/dist-packages (from requests<3,>=2.21.0->tensorboard<2.13,>=2.12->tensorflow) (2022.12.7)\n","Requirement already satisfied: MarkupSafe>=2.1.1 in /usr/local/lib/python3.9/dist-packages (from werkzeug>=1.0.1->tensorboard<2.13,>=2.12->tensorflow) (2.1.2)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.9/dist-packages (from importlib-metadata>=4.4->markdown>=2.6.8->tensorboard<2.13,>=2.12->tensorflow) (3.15.0)\n","Requirement already satisfied: pyasn1<0.5.0,>=0.4.6 in /usr/local/lib/python3.9/dist-packages (from pyasn1-modules>=0.2.1->google-auth<3,>=1.6.3->tensorboard<2.13,>=2.12->tensorflow) (0.4.8)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.9/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<1.1,>=0.5->tensorboard<2.13,>=2.12->tensorflow) (3.2.2)\n"]}],"source":["pip install tensorflow"]},{"cell_type":"code","source":["pip install keras"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5QxitI5Pj62Z","executionInfo":{"status":"ok","timestamp":1681807669986,"user_tz":-330,"elapsed":4488,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}},"outputId":"1d11bf96-c558-4d45-8408-d23e47592fe1"},"execution_count":74,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: keras in /usr/local/lib/python3.9/dist-packages (2.12.0)\n"]}]},{"cell_type":"code","source":["import pandas as pd"],"metadata":{"id":"g-2fVPc8j8uf","executionInfo":{"status":"ok","timestamp":1681807669987,"user_tz":-330,"elapsed":23,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":75,"outputs":[]},{"cell_type":"code","source":["import numpy as np"],"metadata":{"id":"8MV-R4jXj-eX","executionInfo":{"status":"ok","timestamp":1681807669987,"user_tz":-330,"elapsed":22,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":76,"outputs":[]},{"cell_type":"code","source":["import warnings"],"metadata":{"id":"WfoXo1yjkDx3","executionInfo":{"status":"ok","timestamp":1681807669988,"user_tz":-330,"elapsed":23,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":77,"outputs":[]},{"cell_type":"code","source":["warnings.filterwarnings(\"ignore\")"],"metadata":{"id":"wztpwjESkF9o","executionInfo":{"status":"ok","timestamp":1681807669988,"user_tz":-330,"elapsed":22,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":78,"outputs":[]},{"cell_type":"code","source":["import matplotlib.pyplot as plt"],"metadata":{"id":"cCYxmke6kKB2","executionInfo":{"status":"ok","timestamp":1681807669988,"user_tz":-330,"elapsed":22,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":79,"outputs":[]},{"cell_type":"code","source":["import seaborn as sns"],"metadata":{"id":"kE_80UOekOHW","executionInfo":{"status":"ok","timestamp":1681807669989,"user_tz":-330,"elapsed":22,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":80,"outputs":[]},{"cell_type":"code","source":["import tensorflow as tf"],"metadata":{"id":"tGh73MIEkQQ2","executionInfo":{"status":"ok","timestamp":1681807669989,"user_tz":-330,"elapsed":22,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":81,"outputs":[]},{"cell_type":"code","source":["from tensorflow import keras"],"metadata":{"id":"jZEKlmdjkTVm","executionInfo":{"status":"ok","timestamp":1681807669989,"user_tz":-330,"elapsed":21,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":82,"outputs":[]},{"cell_type":"code","source":["from tensorflow.keras import Sequential"],"metadata":{"id":"V-1ytPZIkWke","executionInfo":{"status":"ok","timestamp":1681807669990,"user_tz":-330,"elapsed":22,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":83,"outputs":[]},{"cell_type":"code","source":["from tensorflow.keras.layers import Dense"],"metadata":{"id":"WqoMZvI7kauH","executionInfo":{"status":"ok","timestamp":1681807669990,"user_tz":-330,"elapsed":21,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":84,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import classification_report"],"metadata":{"id":"6c_TTYrQkjZX","executionInfo":{"status":"ok","timestamp":1681807669990,"user_tz":-330,"elapsed":21,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":85,"outputs":[]},{"cell_type":"code","source":["df=pd.read_excel(\"Churn_Modelling.xlsx\")"],"metadata":{"id":"b9VxBFGRksTv","executionInfo":{"status":"ok","timestamp":1681807673625,"user_tz":-330,"elapsed":3655,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":86,"outputs":[]},{"cell_type":"code","source":["x=df.iloc[:,3:-1].values"],"metadata":{"id":"yng0R5agk0oX","executionInfo":{"status":"ok","timestamp":1681807673625,"user_tz":-330,"elapsed":48,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":87,"outputs":[]},{"cell_type":"code","source":["y=df.iloc[:,-1].values"],"metadata":{"id":"edO8BSmXk8Kf","executionInfo":{"status":"ok","timestamp":1681807673626,"user_tz":-330,"elapsed":48,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":88,"outputs":[]},{"cell_type":"code","source":["x"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9E094VOHlCQ_","executionInfo":{"status":"ok","timestamp":1681807673626,"user_tz":-330,"elapsed":47,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}},"outputId":"11f741e7-cecb-4e2a-b713-1e8ede2157b5"},"execution_count":89,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[619, 'France', 'Female', ..., 1, 1, 101348.88],\n","       [608, 'Spain', 'Female', ..., 0, 1, 112542.58],\n","       [502, 'France', 'Female', ..., 1, 0, 113931.57],\n","       ...,\n","       [709, 'France', 'Female', ..., 0, 1, 42085.58],\n","       [772, 'Germany', 'Male', ..., 1, 0, 92888.52],\n","       [792, 'France', 'Female', ..., 1, 0, 38190.78]], dtype=object)"]},"metadata":{},"execution_count":89}]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Pbx3IwgxlC2X","executionInfo":{"status":"ok","timestamp":1681807673626,"user_tz":-330,"elapsed":42,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}},"outputId":"9d4a657e-588c-4db7-955a-9017bab675f9"},"execution_count":90,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 0, 1, ..., 1, 1, 0])"]},"metadata":{},"execution_count":90}]},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder"],"metadata":{"id":"17BAS5dUlDD_","executionInfo":{"status":"ok","timestamp":1681807673627,"user_tz":-330,"elapsed":35,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":91,"outputs":[]},{"cell_type":"code","source":["le=LabelEncoder()"],"metadata":{"id":"WctObxsFlIt_","executionInfo":{"status":"ok","timestamp":1681807673627,"user_tz":-330,"elapsed":33,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":92,"outputs":[]},{"cell_type":"code","source":["le1=LabelEncoder()"],"metadata":{"id":"MA_x3MltlLnP","executionInfo":{"status":"ok","timestamp":1681807673627,"user_tz":-330,"elapsed":32,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":93,"outputs":[]},{"cell_type":"code","source":["x[:,1]=le.fit_transform(x[:,1])"],"metadata":{"id":"aOarKdbllTT2","executionInfo":{"status":"ok","timestamp":1681807673628,"user_tz":-330,"elapsed":33,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":94,"outputs":[]},{"cell_type":"code","source":["x[:,2]=le1.fit_transform(x[:,2])"],"metadata":{"id":"8VtOpUHblZm_","executionInfo":{"status":"ok","timestamp":1681807673628,"user_tz":-330,"elapsed":32,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":95,"outputs":[]},{"cell_type":"code","source":["x"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PPthvoUQlzHo","executionInfo":{"status":"ok","timestamp":1681807673628,"user_tz":-330,"elapsed":32,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}},"outputId":"2b58b9fb-e4e1-47d9-bd7a-ca7f9f155d42"},"execution_count":96,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[619, 0, 0, ..., 1, 1, 101348.88],\n","       [608, 2, 0, ..., 0, 1, 112542.58],\n","       [502, 0, 0, ..., 1, 0, 113931.57],\n","       ...,\n","       [709, 0, 0, ..., 0, 1, 42085.58],\n","       [772, 1, 1, ..., 1, 0, 92888.52],\n","       [792, 0, 0, ..., 1, 0, 38190.78]], dtype=object)"]},"metadata":{},"execution_count":96}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-WxIBp26lzsv","executionInfo":{"status":"ok","timestamp":1681807673628,"user_tz":-330,"elapsed":27,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}},"outputId":"7c5f86ec-7b61-46b4-9325-0c95cf783e9f"},"execution_count":97,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 10000 entries, 0 to 9999\n","Data columns (total 14 columns):\n"," #   Column           Non-Null Count  Dtype  \n","---  ------           --------------  -----  \n"," 0   RowNumber        10000 non-null  int64  \n"," 1   CustomerId       10000 non-null  int64  \n"," 2   Surname          10000 non-null  object \n"," 3   CreditScore      10000 non-null  int64  \n"," 4   Geography        10000 non-null  object \n"," 5   Gender           10000 non-null  object \n"," 6   Age              10000 non-null  int64  \n"," 7   Tenure           10000 non-null  int64  \n"," 8   Balance          10000 non-null  float64\n"," 9   NumOfProducts    10000 non-null  int64  \n"," 10  HasCrCard        10000 non-null  int64  \n"," 11  IsActiveMember   10000 non-null  int64  \n"," 12  EstimatedSalary  10000 non-null  float64\n"," 13  Exited           10000 non-null  int64  \n","dtypes: float64(2), int64(9), object(3)\n","memory usage: 1.1+ MB\n"]}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split"],"metadata":{"id":"dlFcsMB3l00H","executionInfo":{"status":"ok","timestamp":1681807673629,"user_tz":-330,"elapsed":23,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":98,"outputs":[]},{"cell_type":"code","source":["xtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=30,random_state=1)"],"metadata":{"id":"1no5szfjmLg_","executionInfo":{"status":"ok","timestamp":1681807673629,"user_tz":-330,"elapsed":23,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":99,"outputs":[]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler"],"metadata":{"id":"lM_XzWX9mkqX","executionInfo":{"status":"ok","timestamp":1681807673629,"user_tz":-330,"elapsed":22,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":100,"outputs":[]},{"cell_type":"code","source":["sc=StandardScaler()"],"metadata":{"id":"PcMdLVrvm6PX","executionInfo":{"status":"ok","timestamp":1681807673629,"user_tz":-330,"elapsed":22,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":101,"outputs":[]},{"cell_type":"code","source":["xtrain=sc.fit_transform(xtrain)"],"metadata":{"id":"0--7JkiRm9H3","executionInfo":{"status":"ok","timestamp":1681807673630,"user_tz":-330,"elapsed":22,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":102,"outputs":[]},{"cell_type":"code","source":["xtest=sc.transform(xtest)"],"metadata":{"id":"po7P_sh8nPu_","executionInfo":{"status":"ok","timestamp":1681807673630,"user_tz":-330,"elapsed":22,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":103,"outputs":[]},{"cell_type":"code","source":["ann=Sequential()"],"metadata":{"id":"WMLaevNpncd0","executionInfo":{"status":"ok","timestamp":1681807673630,"user_tz":-330,"elapsed":21,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":104,"outputs":[]},{"cell_type":"code","source":["ann.add(Dense(units=6,activation=\"relu\"))"],"metadata":{"id":"DpYt9vTQneZX","executionInfo":{"status":"ok","timestamp":1681807673630,"user_tz":-330,"elapsed":20,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":105,"outputs":[]},{"cell_type":"code","source":["ann.add(Dense(units=1,activation=\"sigmoid\"))"],"metadata":{"id":"Q1a6xmYvnnLf","executionInfo":{"status":"ok","timestamp":1681807673631,"user_tz":-330,"elapsed":20,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":106,"outputs":[]},{"cell_type":"code","source":["ann.compile(optimizer=\"adam\",loss=\"binary_crossentropy\",metrics=[\"accuracy\"])\n"],"metadata":{"id":"ayhLohNen41X","executionInfo":{"status":"ok","timestamp":1681807673631,"user_tz":-330,"elapsed":20,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":107,"outputs":[]},{"cell_type":"code","source":["ann.fit(xtrain,ytrain,batch_size=30,epochs=100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pCkYx-O7oI8I","executionInfo":{"status":"ok","timestamp":1681807734588,"user_tz":-330,"elapsed":60976,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}},"outputId":"551c9e7c-aba9-4a2a-b663-8231231643a5"},"execution_count":108,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.5643 - accuracy: 0.7276\n","Epoch 2/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.4606 - accuracy: 0.8078\n","Epoch 3/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.4311 - accuracy: 0.8161\n","Epoch 4/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.4133 - accuracy: 0.8284\n","Epoch 5/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3989 - accuracy: 0.8354\n","Epoch 6/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3877 - accuracy: 0.8422\n","Epoch 7/100\n","333/333 [==============================] - 1s 3ms/step - loss: 0.3788 - accuracy: 0.8458\n","Epoch 8/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3721 - accuracy: 0.8491\n","Epoch 9/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3669 - accuracy: 0.8522\n","Epoch 10/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3633 - accuracy: 0.8529\n","Epoch 11/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3606 - accuracy: 0.8553\n","Epoch 12/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3584 - accuracy: 0.8549\n","Epoch 13/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3569 - accuracy: 0.8558\n","Epoch 14/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3554 - accuracy: 0.8573\n","Epoch 15/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3546 - accuracy: 0.8576\n","Epoch 16/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3536 - accuracy: 0.8576\n","Epoch 17/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3531 - accuracy: 0.8575\n","Epoch 18/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3525 - accuracy: 0.8580\n","Epoch 19/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3524 - accuracy: 0.8582\n","Epoch 20/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3519 - accuracy: 0.8593\n","Epoch 21/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3513 - accuracy: 0.8586\n","Epoch 22/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3513 - accuracy: 0.8575\n","Epoch 23/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3510 - accuracy: 0.8586\n","Epoch 24/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3506 - accuracy: 0.8586\n","Epoch 25/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3508 - accuracy: 0.8598\n","Epoch 26/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3506 - accuracy: 0.8588\n","Epoch 27/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3503 - accuracy: 0.8593\n","Epoch 28/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3500 - accuracy: 0.8595\n","Epoch 29/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3499 - accuracy: 0.8590\n","Epoch 30/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3495 - accuracy: 0.8604\n","Epoch 31/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3494 - accuracy: 0.8592\n","Epoch 32/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3492 - accuracy: 0.8590\n","Epoch 33/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3492 - accuracy: 0.8598\n","Epoch 34/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3488 - accuracy: 0.8607\n","Epoch 35/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3490 - accuracy: 0.8588\n","Epoch 36/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3487 - accuracy: 0.8598\n","Epoch 37/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3487 - accuracy: 0.8591\n","Epoch 38/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3485 - accuracy: 0.8583\n","Epoch 39/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3484 - accuracy: 0.8594\n","Epoch 40/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3482 - accuracy: 0.8580\n","Epoch 41/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3482 - accuracy: 0.8595\n","Epoch 42/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3479 - accuracy: 0.8579\n","Epoch 43/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3478 - accuracy: 0.8595\n","Epoch 44/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3477 - accuracy: 0.8596\n","Epoch 45/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3478 - accuracy: 0.8600\n","Epoch 46/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3476 - accuracy: 0.8589\n","Epoch 47/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3474 - accuracy: 0.8594\n","Epoch 48/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3474 - accuracy: 0.8585\n","Epoch 49/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3473 - accuracy: 0.8596\n","Epoch 50/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3471 - accuracy: 0.8587\n","Epoch 51/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3469 - accuracy: 0.8594\n","Epoch 52/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3470 - accuracy: 0.8594\n","Epoch 53/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3468 - accuracy: 0.8594\n","Epoch 54/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3465 - accuracy: 0.8598\n","Epoch 55/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3467 - accuracy: 0.8595\n","Epoch 56/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3466 - accuracy: 0.8604\n","Epoch 57/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3461 - accuracy: 0.8596\n","Epoch 58/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3463 - accuracy: 0.8605\n","Epoch 59/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3461 - accuracy: 0.8592\n","Epoch 60/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3461 - accuracy: 0.8593\n","Epoch 61/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3459 - accuracy: 0.8596\n","Epoch 62/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3456 - accuracy: 0.8575\n","Epoch 63/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3458 - accuracy: 0.8603\n","Epoch 64/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3456 - accuracy: 0.8604\n","Epoch 65/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3453 - accuracy: 0.8598\n","Epoch 66/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3454 - accuracy: 0.8592\n","Epoch 67/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3448 - accuracy: 0.8598\n","Epoch 68/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3448 - accuracy: 0.8603\n","Epoch 69/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3449 - accuracy: 0.8599\n","Epoch 70/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3448 - accuracy: 0.8602\n","Epoch 71/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3445 - accuracy: 0.8595\n","Epoch 72/100\n","333/333 [==============================] - 1s 3ms/step - loss: 0.3445 - accuracy: 0.8602\n","Epoch 73/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3443 - accuracy: 0.8612\n","Epoch 74/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3439 - accuracy: 0.8600\n","Epoch 75/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3437 - accuracy: 0.8603\n","Epoch 76/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3439 - accuracy: 0.8601\n","Epoch 77/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3438 - accuracy: 0.8608\n","Epoch 78/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3434 - accuracy: 0.8597\n","Epoch 79/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3434 - accuracy: 0.8602\n","Epoch 80/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3435 - accuracy: 0.8609\n","Epoch 81/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3434 - accuracy: 0.8604\n","Epoch 82/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3430 - accuracy: 0.8609\n","Epoch 83/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3430 - accuracy: 0.8595\n","Epoch 84/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3429 - accuracy: 0.8593\n","Epoch 85/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3429 - accuracy: 0.8602\n","Epoch 86/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3427 - accuracy: 0.8600\n","Epoch 87/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3427 - accuracy: 0.8599\n","Epoch 88/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3425 - accuracy: 0.8614\n","Epoch 89/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3428 - accuracy: 0.8600\n","Epoch 90/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3422 - accuracy: 0.8601\n","Epoch 91/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3424 - accuracy: 0.8615\n","Epoch 92/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3424 - accuracy: 0.8602\n","Epoch 93/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3421 - accuracy: 0.8612\n","Epoch 94/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3421 - accuracy: 0.8617\n","Epoch 95/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3421 - accuracy: 0.8610\n","Epoch 96/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3418 - accuracy: 0.8614\n","Epoch 97/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3420 - accuracy: 0.8612\n","Epoch 98/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3420 - accuracy: 0.8610\n","Epoch 99/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3419 - accuracy: 0.8612\n","Epoch 100/100\n","333/333 [==============================] - 1s 2ms/step - loss: 0.3417 - accuracy: 0.8626\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f4ae2bb6f10>"]},"metadata":{},"execution_count":108}]},{"cell_type":"code","source":["ypred=ann.predict(xtest)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n4iosVeuoPpX","executionInfo":{"status":"ok","timestamp":1681807735332,"user_tz":-330,"elapsed":769,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}},"outputId":"9fba80cc-838c-4bd8-b070-1734cfb1efe3"},"execution_count":109,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 50ms/step\n"]}]},{"cell_type":"code","source":["ypred=ypred>0.5"],"metadata":{"id":"O3wquzHSpKQX","executionInfo":{"status":"ok","timestamp":1681807735334,"user_tz":-330,"elapsed":54,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":110,"outputs":[]},{"cell_type":"code","source":["print(classification_report(ytest,ypred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"azPdw3DzpTcG","executionInfo":{"status":"ok","timestamp":1681807735335,"user_tz":-330,"elapsed":54,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}},"outputId":"a547ff6e-3c15-4ab3-854c-b4f2007fae1e"},"execution_count":111,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.93      1.00      0.96        27\n","           1       1.00      0.33      0.50         3\n","\n","    accuracy                           0.93        30\n","   macro avg       0.97      0.67      0.73        30\n","weighted avg       0.94      0.93      0.92        30\n","\n"]}]},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression"],"metadata":{"id":"wIlsDGdbpa1P","executionInfo":{"status":"ok","timestamp":1681807735337,"user_tz":-330,"elapsed":49,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":112,"outputs":[]},{"cell_type":"code","source":["logreg=LogisticRegression()"],"metadata":{"id":"DGyrQRL9pk6v","executionInfo":{"status":"ok","timestamp":1681807735338,"user_tz":-330,"elapsed":49,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":113,"outputs":[]},{"cell_type":"code","source":["logreg.fit(xtrain,ytrain)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"eO2TTnZ9pnVH","executionInfo":{"status":"ok","timestamp":1681807735339,"user_tz":-330,"elapsed":50,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}},"outputId":"f3de0e17-cf2d-4726-a1cf-492793d18b61"},"execution_count":114,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"],"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":114}]},{"cell_type":"code","source":["ypred=logreg.predict(xtest)"],"metadata":{"id":"z4-gycugpruf","executionInfo":{"status":"ok","timestamp":1681807735340,"user_tz":-330,"elapsed":49,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":115,"outputs":[]},{"cell_type":"code","source":["print(classification_report(ytest,ypred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SZKDPFbEpyQf","executionInfo":{"status":"ok","timestamp":1681807735340,"user_tz":-330,"elapsed":48,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}},"outputId":"a6243c0c-200b-4b26-ad66-b522b932349d"},"execution_count":116,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.93      0.96      0.95        27\n","           1       0.50      0.33      0.40         3\n","\n","    accuracy                           0.90        30\n","   macro avg       0.71      0.65      0.67        30\n","weighted avg       0.89      0.90      0.89        30\n","\n"]}]},{"cell_type":"code","source":["x[:,1]=le.fit_transform(x[:,1])"],"metadata":{"id":"XC4nregCp4J_","executionInfo":{"status":"ok","timestamp":1681807735341,"user_tz":-330,"elapsed":45,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":117,"outputs":[]},{"cell_type":"code","source":["x"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_xs67h4Yv46_","executionInfo":{"status":"ok","timestamp":1681807735342,"user_tz":-330,"elapsed":45,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}},"outputId":"76d5feec-7fbf-43de-d5a5-d7f19b5f564a"},"execution_count":118,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[619, 0, 0, ..., 1, 1, 101348.88],\n","       [608, 2, 0, ..., 0, 1, 112542.58],\n","       [502, 0, 0, ..., 1, 0, 113931.57],\n","       ...,\n","       [709, 0, 0, ..., 0, 1, 42085.58],\n","       [772, 1, 1, ..., 1, 0, 92888.52],\n","       [792, 0, 0, ..., 1, 0, 38190.78]], dtype=object)"]},"metadata":{},"execution_count":118}]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"G5YMPvbuxZhH","executionInfo":{"status":"ok","timestamp":1681807735342,"user_tz":-330,"elapsed":42,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}},"outputId":"d57354b1-4cf5-4281-d8d9-2e860de171bf"},"execution_count":119,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      RowNumber  CustomerId    Surname  CreditScore Geography  Gender  Age  \\\n","0             1    15634602   Hargrave          619    France  Female   42   \n","1             2    15647311       Hill          608     Spain  Female   41   \n","2             3    15619304       Onio          502    France  Female   42   \n","3             4    15701354       Boni          699    France  Female   39   \n","4             5    15737888   Mitchell          850     Spain  Female   43   \n","...         ...         ...        ...          ...       ...     ...  ...   \n","9995       9996    15606229   Obijiaku          771    France    Male   39   \n","9996       9997    15569892  Johnstone          516    France    Male   35   \n","9997       9998    15584532        Liu          709    France  Female   36   \n","9998       9999    15682355  Sabbatini          772   Germany    Male   42   \n","9999      10000    15628319     Walker          792    France  Female   28   \n","\n","      Tenure    Balance  NumOfProducts  HasCrCard  IsActiveMember  \\\n","0          2       0.00              1          1               1   \n","1          1   83807.86              1          0               1   \n","2          8  159660.80              3          1               0   \n","3          1       0.00              2          0               0   \n","4          2  125510.82              1          1               1   \n","...      ...        ...            ...        ...             ...   \n","9995       5       0.00              2          1               0   \n","9996      10   57369.61              1          1               1   \n","9997       7       0.00              1          0               1   \n","9998       3   75075.31              2          1               0   \n","9999       4  130142.79              1          1               0   \n","\n","      EstimatedSalary  Exited  \n","0           101348.88       1  \n","1           112542.58       0  \n","2           113931.57       1  \n","3            93826.63       0  \n","4            79084.10       0  \n","...               ...     ...  \n","9995         96270.64       0  \n","9996        101699.77       0  \n","9997         42085.58       1  \n","9998         92888.52       1  \n","9999         38190.78       0  \n","\n","[10000 rows x 14 columns]"],"text/html":["\n","  <div id=\"df-09700d85-2d3e-4d23-b2c3-8bb2218a6428\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>RowNumber</th>\n","      <th>CustomerId</th>\n","      <th>Surname</th>\n","      <th>CreditScore</th>\n","      <th>Geography</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Tenure</th>\n","      <th>Balance</th>\n","      <th>NumOfProducts</th>\n","      <th>HasCrCard</th>\n","      <th>IsActiveMember</th>\n","      <th>EstimatedSalary</th>\n","      <th>Exited</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>15634602</td>\n","      <td>Hargrave</td>\n","      <td>619</td>\n","      <td>France</td>\n","      <td>Female</td>\n","      <td>42</td>\n","      <td>2</td>\n","      <td>0.00</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>101348.88</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>15647311</td>\n","      <td>Hill</td>\n","      <td>608</td>\n","      <td>Spain</td>\n","      <td>Female</td>\n","      <td>41</td>\n","      <td>1</td>\n","      <td>83807.86</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>112542.58</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>15619304</td>\n","      <td>Onio</td>\n","      <td>502</td>\n","      <td>France</td>\n","      <td>Female</td>\n","      <td>42</td>\n","      <td>8</td>\n","      <td>159660.80</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113931.57</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>15701354</td>\n","      <td>Boni</td>\n","      <td>699</td>\n","      <td>France</td>\n","      <td>Female</td>\n","      <td>39</td>\n","      <td>1</td>\n","      <td>0.00</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>93826.63</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>15737888</td>\n","      <td>Mitchell</td>\n","      <td>850</td>\n","      <td>Spain</td>\n","      <td>Female</td>\n","      <td>43</td>\n","      <td>2</td>\n","      <td>125510.82</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>79084.10</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>9995</th>\n","      <td>9996</td>\n","      <td>15606229</td>\n","      <td>Obijiaku</td>\n","      <td>771</td>\n","      <td>France</td>\n","      <td>Male</td>\n","      <td>39</td>\n","      <td>5</td>\n","      <td>0.00</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>96270.64</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>9996</th>\n","      <td>9997</td>\n","      <td>15569892</td>\n","      <td>Johnstone</td>\n","      <td>516</td>\n","      <td>France</td>\n","      <td>Male</td>\n","      <td>35</td>\n","      <td>10</td>\n","      <td>57369.61</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>101699.77</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>9997</th>\n","      <td>9998</td>\n","      <td>15584532</td>\n","      <td>Liu</td>\n","      <td>709</td>\n","      <td>France</td>\n","      <td>Female</td>\n","      <td>36</td>\n","      <td>7</td>\n","      <td>0.00</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>42085.58</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9998</th>\n","      <td>9999</td>\n","      <td>15682355</td>\n","      <td>Sabbatini</td>\n","      <td>772</td>\n","      <td>Germany</td>\n","      <td>Male</td>\n","      <td>42</td>\n","      <td>3</td>\n","      <td>75075.31</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>92888.52</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9999</th>\n","      <td>10000</td>\n","      <td>15628319</td>\n","      <td>Walker</td>\n","      <td>792</td>\n","      <td>France</td>\n","      <td>Female</td>\n","      <td>28</td>\n","      <td>4</td>\n","      <td>130142.79</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>38190.78</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10000 rows × 14 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-09700d85-2d3e-4d23-b2c3-8bb2218a6428')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-09700d85-2d3e-4d23-b2c3-8bb2218a6428 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-09700d85-2d3e-4d23-b2c3-8bb2218a6428');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":119}]},{"cell_type":"code","source":["newob = pd.DataFrame({'CreditScore': [600], 'Geography': ['France'], 'Gender': ['Male'], 'Age': [40], 'Tenure': [3], 'Balance': [60000], 'NumOfProducts': [2], 'HasCrCard': [1], 'IsActiveMember': [1], 'EstimatedSalary': [50000]})\n","newob['Geography']=le.transform(newob['Geography'])\n","newob['Gender']=le1.transform(newob['Gender'])\n","newob=sc.transform(newob)\n","ypred=ann.predict(newob)[0][0]\n","print(\"predicted probability of churn for new observation:\",ypred)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"fTg5LZBMykfH","executionInfo":{"status":"error","timestamp":1681807735343,"user_tz":-330,"elapsed":41,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}},"outputId":"690e46bd-345e-4780-9ed4-b7a1436fbb5c"},"execution_count":120,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/sklearn/utils/_encode.py\u001b[0m in \u001b[0;36m_encode\u001b[0;34m(values, uniques, check_unknown)\u001b[0m\n\u001b[1;32m    223\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 224\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0m_map_to_integer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0muniques\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    225\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/sklearn/utils/_encode.py\u001b[0m in \u001b[0;36m_map_to_integer\u001b[0;34m(values, uniques)\u001b[0m\n\u001b[1;32m    163\u001b[0m     \u001b[0mtable\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_nandict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0mval\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mval\u001b[0m \u001b[0;32min\u001b[0m \u001b[0menumerate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0muniques\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 164\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mtable\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mv\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mv\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mvalues\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    165\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/sklearn/utils/_encode.py\u001b[0m in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m    163\u001b[0m     \u001b[0mtable\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_nandict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0mval\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mval\u001b[0m \u001b[0;32min\u001b[0m \u001b[0menumerate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0muniques\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 164\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mtable\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mv\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mv\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mvalues\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    165\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/sklearn/utils/_encode.py\u001b[0m in \u001b[0;36m__missing__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m    157\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnan_value\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 158\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    159\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'France'","\nDuring handling of the above exception, another exception occurred:\n","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-120-d815bf4712b3>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mnewob\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0;34m'CreditScore'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;36m600\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'Geography'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m'France'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'Gender'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m'Male'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'Age'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;36m40\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'Tenure'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'Balance'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;36m60000\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'NumOfProducts'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'HasCrCard'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'IsActiveMember'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'EstimatedSalary'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;36m50000\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mnewob\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Geography'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtransform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnewob\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Geography'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mnewob\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Gender'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mle1\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtransform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnewob\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Gender'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mnewob\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msc\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtransform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnewob\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mypred\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mann\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnewob\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/sklearn/utils/_set_output.py\u001b[0m in \u001b[0;36mwrapped\u001b[0;34m(self, X, *args, **kwargs)\u001b[0m\n\u001b[1;32m    138\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mwraps\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    139\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mwrapped\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 140\u001b[0;31m         \u001b[0mdata_to_wrap\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    141\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata_to_wrap\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtuple\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    142\u001b[0m             \u001b[0;31m# only wrap the first output for cross decomposition\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/sklearn/preprocessing/_label.py\u001b[0m in \u001b[0;36mtransform\u001b[0;34m(self, y)\u001b[0m\n\u001b[1;32m    137\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    138\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 139\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0m_encode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0muniques\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclasses_\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    140\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    141\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0minverse_transform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/sklearn/utils/_encode.py\u001b[0m in \u001b[0;36m_encode\u001b[0;34m(values, uniques, check_unknown)\u001b[0m\n\u001b[1;32m    224\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0m_map_to_integer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0muniques\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    225\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 226\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"y contains previously unseen labels: {str(e)}\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    227\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    228\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mcheck_unknown\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: y contains previously unseen labels: 'France'"]}]},{"cell_type":"code","source":[],"metadata":{"id":"uKV9HQJadyLy","executionInfo":{"status":"aborted","timestamp":1681807735343,"user_tz":-330,"elapsed":39,"user":{"displayName":"Anjali Anjali","userId":"00083208172806929458"}}},"execution_count":null,"outputs":[]}]}